name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build libssl-dev

    - name: Install liboqs
      run: |
        git clone --depth 1 https://github.com/open-quantum-safe/liboqs /tmp/liboqs
        cmake -S /tmp/liboqs -B /tmp/liboqs/build -GNinja -DBUILD_SHARED_LIBS=ON
        cmake --build /tmp/liboqs/build --parallel $(nproc)
        sudo cmake --install /tmp/liboqs/build
        sudo ldconfig

    - name: Install liboqs-python
      run: |
        git clone --depth 1 https://github.com/open-quantum-safe/liboqs-python /tmp/liboqs-python
        pip install /tmp/liboqs-python

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r tests/requirements_dev.txt

    - name: Run tests
      run: |
        cd tests
        pytest -v

    - name: Run security tests
      run: |
        cd tests
        pytest test_security.py test_rate_limiting.py -v

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t qbtc-core:test .

    - name: Test Docker Compose
      run: |
        docker compose config
        docker compose up -d
        sleep 30
        docker compose ps
        curl -f http://localhost:8080/health || exit 1
        docker compose down -v

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install ruff black isort mypy

    - name: Run linters
      run: |
        ruff check .
        black --check .
        isort --check-only .
      continue-on-error: true