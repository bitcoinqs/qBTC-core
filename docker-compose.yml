version: '3.8'

services:
  # Bootstrap node - initial network node
  bootstrap:
    build: .
    container_name: qbtc-bootstrap
    environment:
      WALLET_PASSWORD: ${BOOTSTRAP_WALLET_PASSWORD:-bootstrappass}
      WALLET_FILE: "bootstrap.json"
      # Disable NAT traversal for test network
      DISABLE_NAT_TRAVERSAL: "true"
      # Set database path
      ROCKSDB_PATH: "/app/db"
      # Security configuration - disabled for test network
      RATE_LIMIT_ENABLED: "false"
      DDOS_PROTECTION_ENABLED: "false"
      # Set admin address to bootstrap for testing
      ADMIN_ADDRESS: "bqs1HpmbeSd8nhRpq5zX5df91D3Xy8pSUovmV" #"${ADMIN_ADDRESS:-}"
      ATTACK_PATTERN_DETECTION: "false"
      BOT_DETECTION_ENABLED: "false"
      PEER_REPUTATION_ENABLED: "true"
      SECURITY_LOGGING_ENABLED: "true"
      # Redis configuration
      USE_REDIS: "true"
      REDIS_URL: "redis://redis:6379/0"
      # Rate limits (requests per minute)
      RATE_LIMIT_WORKER: "10"
      RATE_LIMIT_BALANCE: "100"
      RATE_LIMIT_TRANSACTIONS: "50"
      RATE_LIMIT_DEFAULT: "60"
    command: ["8001", "8002", "--wallet", "bootstrap.json"]
    ports:
      - "8080:8080"     # Web API
      - "8332:8332"     # RPC
      - "8001:8001/udp" # DHT UDP
      - "8002:8002"     # Gossip TCP
    volumes:
      - bootstrap-data:/app/db
      - ./logs:/var/log/qbtc
    depends_on:
      - redis
    networks:
      - qbtc-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M

  # Validator node 1
  validator1:
    build: .
    container_name: qbtc-validator1
    environment:
      WALLET_PASSWORD: ${VALIDATOR1_WALLET_PASSWORD:-validator1pass}
      WALLET_FILE: "validator1.json"
      # Disable NAT traversal for test network
      DISABLE_NAT_TRAVERSAL: "true"
      # Set database path
      ROCKSDB_PATH: "/app/db"
      # Security configuration - disabled for test network
      RATE_LIMIT_ENABLED: "false"
      DDOS_PROTECTION_ENABLED: "false"
      # Set admin address to bootstrap for testing
      ADMIN_ADDRESS: "${ADMIN_ADDRESS:-}"
      ATTACK_PATTERN_DETECTION: "false"
      BOT_DETECTION_ENABLED: "false"
      PEER_REPUTATION_ENABLED: "true"
      SECURITY_LOGGING_ENABLED: "true"
      # Redis configuration
      USE_REDIS: "true"
      REDIS_URL: "redis://redis:6379/1"
    command: ["8003", "8004", "--wallet", "validator1.json", "--Bootstrap_ip", "qbtc-bootstrap", "--Bootstrap_port", "8001"]
    ports:
      - "8081:8080"
      - "8333:8332"
      - "8003:8003/udp"
      - "8004:8004"
    volumes:
      - validator1-data:/app/db
      - ./logs:/var/log/qbtc
    depends_on:
      - bootstrap
      - redis
    networks:
      - qbtc-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M

  # Validator node 2
  validator2:
    build: .
    container_name: qbtc-validator2
    environment:
      WALLET_PASSWORD: ${VALIDATOR2_WALLET_PASSWORD:-validator2pass}
      WALLET_FILE: "validator2.json"
      # Disable NAT traversal for test network
      DISABLE_NAT_TRAVERSAL: "true"
      # Set database path
      ROCKSDB_PATH: "/app/db"
      # Security configuration - disabled for test network
      RATE_LIMIT_ENABLED: "false"
      DDOS_PROTECTION_ENABLED: "false"
      # Set admin address to bootstrap for testing
      ADMIN_ADDRESS: "${ADMIN_ADDRESS:-}"
      ATTACK_PATTERN_DETECTION: "false"
      BOT_DETECTION_ENABLED: "false"
      PEER_REPUTATION_ENABLED: "true"
      SECURITY_LOGGING_ENABLED: "true"
      # Redis configuration
      USE_REDIS: "true"
      REDIS_URL: "redis://redis:6379/2"
    command: ["8005", "8006", "--wallet", "validator2.json", "--Bootstrap_ip", "qbtc-bootstrap", "--Bootstrap_port", "8001"]
    ports:
      - "8082:8080"
      - "8334:8332"
      - "8005:8005/udp"
      - "8006:8006"
    volumes:
      - validator2-data:/app/db
      - ./logs:/var/log/qbtc
    depends_on:
      - bootstrap
      - redis
    networks:
      - qbtc-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M

  # Redis for rate limiting and caching
  redis:
    image: redis:7-alpine
    container_name: qbtc-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - qbtc-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=50m
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Optional: Monitoring stack
  prometheus:
    image: prom/prometheus:latest
    container_name: qbtc-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - qbtc-network
    restart: unless-stopped
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: qbtc-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - qbtc-network
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  bootstrap-data:
  validator1-data:
  validator2-data:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  qbtc-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
